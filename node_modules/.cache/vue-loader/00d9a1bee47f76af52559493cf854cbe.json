{"remainingRequest":"/home/runner/work/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Sintesis.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Sintesis.vue","mtime":1734976763343},{"path":"/home/runner/work/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF5_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2ludGVzaXMnLAogIGRhdGE6ICgpID0+ICh7CiAgICAvLyB2YXJpYWJsZXMgZGUgdnVlCiAgfSksCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgdGhpcy4kYW9zUmVmcmVzaCgpCiAgICB9KQogIH0sCiAgdXBkYXRlZCgpIHsKICAgIHRoaXMuJGFvc1JlZnJlc2goKQogIH0sCn0K"},{"version":3,"sources":["Sintesis.vue"],"names":[],"mappings":";AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sintesis.vue","sourceRoot":"src/pages","sourcesContent":["<template lang=\"pug\">\n.curso-main-container.pb-3\n  BannerInterno(icono=\"fas fa-sitemap\" titulo=\"Síntesis\")\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5\n    p.mb-5 El diagrama representa la estructura integral del componente sobre programación orientada a objetos, centrado en los conceptos y el modelado de #[em software] bajo este paradigma. Partiendo del concepto central de la POO, se ramifica en cuatro áreas esenciales: fundamentos de programación orientada a objetos, principios de diseño, modelado UML y patrones con arquitectura. Cada una de estas áreas incorpora subtemas específicos que conforman los elementos fundamentales para comprender y aplicar eficazmente el paradigma orientado a objetos en el desarrollo de #[em software.]\n    .row.justify-content-center.mb-5\n      .col-lg-3.col-7.mb-lg-0.mb-3: img(src='@/assets/curso/temas/36.png', alt='')\n      .col-lg-5.mb-lg-0.mb-3\n        .p-4(style=\"background-color: #E6F0FC\")\n          p.mb-0 Esta organización ilustra el flujo lógico del aprendizaje y aplicación de la POO. Comienza con la comprensión de los conceptos fundamentales como clases, objetos y encapsulamiento, proporcionando una base sólida. Luego, profundiza en los principios de diseño, abordando la herencia, el polimorfismo y los principios SOLID, que son esenciales para crear #[em software] robusto y mantenible. A continuación, se enfoca en el modelado UML como herramienta para visualizar y documentar el diseño orientado a objetos. Finalmente, culmina con la aplicación práctica a través de patrones de diseño y arquitectura limpia.\n      .col-lg-4.col-7: img(src='@/assets/curso/temas/37.png', alt='')\n    .row.justify-content-center.mb-5\n      .col-lg-5.col-7.mb-lg-0.mb-3: img(src='@/assets/curso/temas/38.png', alt='')\n      .col-lg-7\n        .p-4.tarjeta.color-primario--borde.border-2.bg-white\n          p.mb-0 El diagrama funciona como una hoja de ruta visual para comprender la estructura y el alcance del componente, permitiendo al estudiante visualizar rápidamente la progresión del aprendizaje y las conexiones entre los diferentes temas. Los elementos transversales (diseño modular, reutilización y mantenibilidad) se entrelazan con todas las áreas, enfatizando su importancia continua en el desarrollo orientado a objetos. Se sugiere utilizarlo como referencia para organizar el estudio y entender cómo se integran los diversos aspectos en el desarrollo de #[em software] orientado a objetos, garantizando la creación de aplicaciones bien estructuradas y mantenibles. \n\n    .row.justify-content-center\n      .col-lg-8.mb-5\n        figure\n          img(src=\"@/assets/curso/temas/sintesis.svg\", alt=\"La Figura 3 se denomina «Síntesis temática del componente», es un mapa mental con el tema central “Programación orientada a objetos: conceptos y modelado, del cual se desprenden cuatro ramas principales —Fundamentos POO, principios diseño, modelado UML, patrones y arquitectura— cada una detallada con sus subtemas específicos.\")\n    .row.justify-content-center.mb-5\n      .col-3\n        a.anexo.mb-5(:href=\"obtenerLink('/downloads/Sintesis.pdf')\" target=\"_blank\")\n          .anexo__icono\n            img(src=\"@/assets/bullets/icono-pdf.svg\")\n          .anexo__texto\n            p Anexo. Síntesis\n\n</template>\n\n<script>\nexport default {\n  name: 'Sintesis',\n  data: () => ({\n    // variables de vue\n  }),\n  mounted() {\n    this.$nextTick(() => {\n      this.$aosRefresh()\n    })\n  },\n  updated() {\n    this.$aosRefresh()\n  },\n}\n</script>\n\n<style lang=\"sass\"></style>\n"]}]}